% 
% 2019/04/11
% make csv file to be used on Azure ML.  
%
% AUTHOR
% Aki Kunikoshi
% 428968@gmail.com
%

%% definition
clear all, fclose all, clc;
dirFeature = 'm:\Aki\Data\MachineLearning\from_Sietze\sts\synced';
all_csv    = [dirFeature '\all.csv'];


%% process data.
tic
disp('>>> loading data... ');
dirlist = dir([dirFeature '\*.mat']);
X = [];
for i = 1:size(dirlist, 1)
%for i = 1:1    
    if ~strcmp(dirlist(i).name, '.') && ~strcmp(dirlist(i).name, '..')
        filename = dirlist(i).name;
        disp(filename)
        load([dirFeature '\' filename]);
        
        mt = [...
            data.MT.linear.a, ...
            data.MT.linear.v, ...
            data.MT.linear.x, ...
            data.MT.angles.a, ...
            data.MT.angles.v, ...
            data.MT.angles.x ...
            ];
        ot = [...
            data.Opti.linear.v, ...
            data.Opti.linear.x, ...
            data.Opti.angles.v, ...
            data.Opti.angles.x ...
            ];

        mtd = adddelta(mt');       
        mtn = normalize(mtd');
        X = [X; ...
            mt, mtn, ...
            ot, normalize(ot)];
 
    end % filename is not '.' and '..'
end % for
clear filename i dirlist
clear data mt ot mtn mtd
toc


%% output data.
tic
disp('>>> output data... ');

% make header.
cHeader = {...
    'MT.linear.a1' 'MT.linear.a2' 'MT.linear.a3' ...
    'MT.linear.v1' 'MT.linear.v2' 'MT.linear.v3' ...    
    'MT.linear.x1' 'MT.linear.x2' 'MT.linear.x3' ...
    'MT.angles.a1' 'MT.angles.a2' 'MT.angles.a3' ...
    'MT.angles.v1' 'MT.angles.v2' 'MT.angles.v3' ...    
    'MT.angles.x1' 'MT.angles.x2' 'MT.angles.x3' ...
    ...
    'MT.linear.an1' 'MT.linear.an2' 'MT.linear.an3' ...
    'MT.linear.vn1' 'MT.linear.vn2' 'MT.linear.vn3' ...    
    'MT.linear.xn1' 'MT.linear.xn2' 'MT.linear.xn3' ...
    'MT.angles.an1' 'MT.angles.an2' 'MT.angles.an3' ...
    'MT.angles.vn1' 'MT.angles.vn2' 'MT.angles.vn3' ...    
    'MT.angles.xn1' 'MT.angles.xn2' 'MT.angles.xn3' ...
    ...
    'MT.linear.and1' 'MT.linear.and2' 'MT.linear.and3' ...
    'MT.linear.vnd1' 'MT.linear.vnd2' 'MT.linear.vnd3' ...    
    'MT.linear.xnd1' 'MT.linear.xnd2' 'MT.linear.xnd3' ...
    'MT.angles.and1' 'MT.angles.and2' 'MT.angles.and3' ...
    'MT.angles.vnd1' 'MT.angles.vnd2' 'MT.angles.vnd3' ...    
    'MT.angles.xnd1' 'MT.angles.xnd2' 'MT.angles.xnd3' ...
    ...
    'Opti.linear.v1' ...
    'Opti.linear.x1' 'MT.linear.x2' 'MT.linear.v3' ...
    'Opti.angles.v1' 'Opti.angles.v2' 'Opti.angles.v3' ...
    'Opti.angles.x1' 'Opti.angles.x2' 'Opti.angles.x3' ...
    ...
    'Opti.linear.vn1' ...
    'Opti.linear.xn1' 'MT.linear.xn2' 'MT.linear.vn3' ...
    'Opti.angles.vn1' 'Opti.angles.vn2' 'Opti.angles.vn3' ...
    'Opti.angles.xn1' 'Opti.angles.xn2' 'Opti.angles.xn3' ...   
    };
commaHeader = [cHeader;repmat({','}, 1, numel(cHeader))]; %insert commas
commaHeader = commaHeader(:)';
textHeader  = cell2mat(commaHeader); %cHeader in text with commas
clear cHeader commaHeader

% write header to file
fid = fopen(all_csv, 'w'); 
fprintf(fid, '%s\n', textHeader);
fclose(fid);
clear fid textHeader

%write data to end of file
dlmwrite(all_csv, X, '-append');
toc